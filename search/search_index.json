{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MkDocs Translate","text":"<p>Translation example for <code>mkdocs_translate</code>script Release 0.9.</p> <ul> <li>Getting started</li> <li>Translate Script</li> <li>Writing Guide</li> <li>Development</li> </ul> <p>Note</p> <p>This is an example project, see project README.md for most recent instructions.</p> <p>The mkdocs_translate script is open-source using The MIT License (MIT).</p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#local-development","title":"Local Development","text":"<p>To build and test locally:</p> <ol> <li> <p>Clone:</p> <pre><code>git clone https://github.com/jodygarnett/translate.git translate\n</code></pre> </li> <li> <p>Install requirements:</p> <pre><code>cd translate\npip3 install -r mkdocs_translate/requirements.txt\n</code></pre> </li> <li> <p>Install locally:</p> <pre><code>pip3 install -e .\n</code></pre> </li> </ol>"},{"location":"development/#debugging","title":"Debugging","text":"<ol> <li> <p>Recommend troubleshooting a single file at a time:</p> <pre><code>mkdocs_translate migrate source/index.rst\n</code></pre> </li> <li> <p>Compare the temporary files staged for pandoc conversion:</p> <pre><code>bbedit source/index.rst docs/index.md build/migrate/index.tmp.html build/migrate/index.tmp.md\n</code></pre> </li> <li> <p>To turn on logging during migrating a file:</p> <pre><code>mkdocs_translate --log=DEBUG migrate source/index.rst\n</code></pre> </li> <li> <p>To troubleshoot indexing when scanning a single document:</p> <pre><code>mkdocs_translate --log=DEBUG scan index --TEST source/index.rst\n</code></pre> <p>The index information is sent to standard out (rather than added to a <code>anchor.txt</code> file.</p> </li> <li> <p>To troubleshoot downloads when scanning a single document:</p> <pre><code>mkdocs_translate --log=DEBUG scan download --TEST source/index.rst\n</code></pre> <p>The download information is sent to standard out (rather than a <code>download.txt</code> file.</p> </li> </ol>"},{"location":"development/#pandoc","title":"Pandoc","text":"<ol> <li> <p>The pandoc plugin settings are in two constants:</p> <pre><code>md_extensions_to =\n    'markdown+definition_lists+fenced_divs+backtick_code_blocks+fenced_code_attributes-simple_tables+pipe_tables'\nmd_extensions_from =\n    'markdown+definition_lists+fenced_divs+backtick_code_blocks+fenced_code_attributes+pipe_tables'\n</code></pre> </li> <li> <p>The pandoc extensions are chosen to align with mkdocs use of markdown extensions, or with post-processing:</p> markdown extension pandoc extension post processing tables pymdownx.keys pipe_tables post processing pymdownx.superfences backtick_code_blocks post processing admonition fenced_divs post processing </li> <li> <p>Language translation depends on conversion to and from html. To troubleshoot just the markdown to html conversion:</p> <pre><code>mkdocs_translate internal_html docs/contributing/style-guide.md\nmkdocs_translate internal_markdown build/convert/contributing/style-guide.html\n\ndiff docs/contributing/style-guide.md build/convert/contributing/style-guide.md\n</code></pre> <p>Langauge conversion uses <code>text/html</code>to avoid internationalization of content distributing markdown formatting.</p> </li> </ol>"},{"location":"download/LICENSE/","title":"The MIT License (MIT)","text":"<p>Copyright \u00a9 2024 Jody Garnett</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"guide/","title":"Writing Guide","text":"<p>Working with documentation, markdown formatting, and writing style guide.</p> <ul> <li>Markdown</li> <li>Style Guide</li> </ul> <p>Note</p> <p>The mkdoc_translate script can adapt some markdown extensions for use with pandoc conversion, but not everything.</p> <p>While it is fine to use the mkdoc_translate script for initial Content Migration, if you wish to continue using this tool for language translation you are advised to keep the following writing guidelines in mind.</p> <p>Material for MkDocs</p> <p>The writing guide is setup for use with the excellent Material for MkDocs.</p> <p>This is a great project that was selected by the GeoNetwork community (primarily for the visual appeal). In practice it ends up being quite a nice way to \"keep up\" with advances in the mkdocs ecosystem without having to constantly research what is best.</p>"},{"location":"guide/markdown/","title":"Markdown","text":"<p>These markdown conventions are carefully constructed for consistent representation of user interface elements, files, data and field input.</p> Markdown Directive strong gui label, menu selection <code>monospace</code> text input, item selection emphasis figure (caption) strong-emphasis application, command <code>monospace-strong</code> file <p>Note</p> <p>The above conventions are important for consistency and are required by the translation process.</p> <p>As an example we do not wish to translate keyboard input, so these are represented as monospace text input.</p>"},{"location":"guide/markdown/#user-interface-components","title":"User interface components","text":"<p>Use <code>**strong**</code>to name user interface components for interaction (press for buttons, click for link).</p> <p>Preview:</p> <p>Navigate to Data \u2192 Layers page, and press Add to create a new layer.</p> <p>Markdown uses <code>**strong**</code></p> <pre><code>Navigate to **Data &gt; Layers** page,\nand press **Add** to create a new layer.\n</code></pre> <p>Rich structured text uses <code>menuselection</code>and <code>guilabel</code>directives:</p> <pre><code>Navigate to **Data --&gt; Layers** page,\nand press **Add** to create a new layer.\n</code></pre>"},{"location":"guide/markdown/#selected-input","title":"Selected input","text":"<p>Use <code>item</code> for user selected input, or item in a list or tree:</p> <p>Preview:</p> <p>Select <code>Basemap</code> layer.</p> <p>Markdown uses monospace:</p> <pre><code>Select ``Basemap``layer.\n</code></pre> <p>Rich structured text uses monospace:</p> <pre><code>Select ``Basemap`` layer.\n</code></pre>"},{"location":"guide/markdown/#input-text","title":"Input text","text":"<p>Use <code>monospace</code> for user supplied text input:</p> <p>Preview:</p> <p>Use the Search field to enter: <code>Ocean*</code></p> <p>Markdown uses monospace:</p> <pre><code>Use the **Search** field enter: ``Ocean*``\n</code></pre> <p>Rich structured text uses <code>kbd</code> directive:</p> <pre><code>Use the **Search** field to enter: ``Ocean*``\n</code></pre>"},{"location":"guide/markdown/#keypress","title":"Keypress","text":"<p>Use <code>key</code> directive for keyboard keys.</p> <p>Preview:</p> <p>Press <code>Control-s</code>to search.</p> <p>Markdown uses mkdocs-material keys formatting:</p> <pre><code>Press ++control+s++ to search.\n</code></pre> <p>Rich structured text:</p> <pre><code>Press ``Control-s``to search.\n</code></pre>"},{"location":"guide/markdown/#form-input","title":"Form input","text":"<p>Use definition list to document data entry. The field names use strong as they name a user interface element. Field values to input uses monspace as user input to type in.</p> <p>Preview:</p> <ol> <li> <p>To login as the GeoServer administrator using the default password:</p> User: <p><code>admin</code></p> Password: <p><code>geoserver</code></p> Remember me <p>Unchecked</p> <p>Press Login.</p> </li> </ol> <p>Markdown: definition lists</p> <pre><code>1.  To login as the GeoServer administrator using the default password:\n\n    **User**\n\n    :   ``admin``\n\n    **Password**\n\n    :   ``geoserver``\n\n    **Remember me**\n\n    :   Unchecked\n\n    Press **Login**.\n</code></pre> <p>Rich structured text: list-table</p> <pre><code>#. To login as the GeoServer administrator using the default password:\n\n   .. list-table::\n      :widths: 30 70\n      :width: 100%\n      :stub-columns: 1\n\n      * - User:\n        - ``admin``         * - Password:\n        - ``geoserver``         * - Remember me\n        - Unchecked\n\n   Press **Login**.\n</code></pre>"},{"location":"guide/markdown/#applications-commands-and-tools","title":"Applications, commands and tools","text":"<p>Use bold with italics for proper names of applications, commands, tools, and products.</p> <p>Preview:</p> <p>Launch pgAdmin and connect to the <code>tutorial</code> database.</p> <p>Markdown:</p> <pre><code>Launch ***pgAdmin*** and connect to the ``tutorial``database.\n</code></pre> <p>Rich structured text uses <code>command</code> directive:</p> <pre><code>Launch ***pgAdmin*** and connect to the ``tutorial`` database.\n</code></pre>"},{"location":"guide/markdown/#files","title":"Files","text":"<p>Use bold with <code>monospace</code> for files and folders:</p> <p>Preview</p> <p>See configuration file <code>WEB-INF/config-security/config-security-ldap.xml</code> for details</p> <p>Markdown:</p> <pre><code>See configuration file\n**`WEB-INF/config-security/config-security-ldap.xml`**\nfor details\n</code></pre> <p>Rich structured text:</p> <pre><code>See configuration\nfile **`WEB-INF/config-security/config-security-ldap.xml`**\nfor details\n</code></pre>"},{"location":"guide/markdown/#links-and-references","title":"Links and references","text":""},{"location":"guide/markdown/#internal-references","title":"Internal References","text":"<p>Reference to other section of the document (some care is required to reference a specific heading):</p> <p>Authors have access to translation for initial draft.</p> <p>Markdown use of relative links and anchor:</p> <pre><code>Authors have access to [translation](../translate/language#translate) for initial draft.\n</code></pre> <p>reStructuredText use of <code>ref</code> directive:</p> <pre><code>Authors have access to `translation &lt;../translate/language.rst#translate&gt;`_ for initial draft.\n</code></pre>"},{"location":"guide/markdown/#download-of-sample-file","title":"Download of sample file","text":"<p>Sample file included in the documentation:</p> <p>Download schema example.txt.</p> <p>Markdown relative link, with text following bold with <code>monospace</code>file convention above:</p> <pre><code>Download text [**`example.txt`**](files/example.txt).\n</code></pre> <p>You may also experiment with mkdocs attr_list to supply a filename:</p> <pre><code>Download text [**`example.txt`**](files/example.txt) {:download=\"example.txt\"} .\n</code></pre> <p>reStructured text uses <code>downlaod</code> directive:</p> <pre><code>Download text `example.txt &lt;files/example.txt&gt;`__.\n</code></pre>"},{"location":"guide/markdown/#download_external","title":"Download of external file","text":"<p>To include sample file from outside of the documentation tree:</p> <p>Open-source LICENSE.md</p> <p>Note</p> <p>This functionality is not supported by Material for mkdocs (or any plugin I could find). It is accomplished using the <code>download.py</code> hook described in setup.</p> <p>To use <code>download.py</code> hook, create a <code>download</code> folder to hold staged files</p> <p>Markdown refers to this folder using a relative link (like normal):</p> <pre><code>Open-source [**`LICENSE.md`**](download/LICENSE.md)\n</code></pre> <p>Create <code>download/download.txt</code> with list of files to stage during mkdocs build process:</p> <pre><code># files list for mkdocs hook staging download content\n\nLICENSE.md=../../../../LICENSE.md\n</code></pre> <p>reStructuredText uses <code>download</code> directive with relative path (you may starting leading <code>/</code> to indicate the root of the documentation <code>source</code> folder):</p> <pre><code>Open-source `LICENSE.md &lt;download/LICENSE.md&gt;`__\n</code></pre>"},{"location":"guide/markdown/#icons-images-and-figures","title":"Icons, Images and Figures","text":""},{"location":"guide/markdown/#icons","title":"Icons","text":"<p>Material for mkDocs has extensive icon support, for many user interface elements we can directly make use of the appropriate icon in Markdown:</p> <pre><code>1.  Press the *Validate :fontawesome-solid-check:* button at the top of the page.\n</code></pre>"},{"location":"guide/markdown/#custom-icons","title":"Custom icons","text":"<p>Custom icons:</p> <p> Empower everyone with open source geospatial</p> <p>Material for MkDocs provides support for custom icons:</p> <pre><code>:osgeo-logo: Empower everyone with open source geospatial\n</code></pre> <p>Add images to <code>overrides/.icons/</code> (yes it is a hidden folder):</p> <pre><code>overrides/\n- .icons/\n  - osgeo/\n    logo.svg\n</code></pre> <p>reStructuredText does not offer custom icons, the closest is the use of substitutions to \"inline\" and image.</p> <pre><code>.. |osgeo_mark| image:: img/osgeo_mark.svg\n   :width: 20\n   :height: 20\n\n|osgeo_mark| Empower everyone with open source geospatial\n</code></pre> <p>Warning</p> <p>The mkdocs_translate and pandoc combo is unable to convert inline images at this time.</p> <pre><code>[WARNING] Reference not found for 'Key \"osgeo_mark\"' at build/migrate/guide/markdown.tmp.prep.rst_chunk line 5 column 13\n</code></pre>"},{"location":"guide/markdown/#figures","title":"Figures","text":"<p>Figures are used frequently to allow a caption to describe screen shots and diagrams.</p> <p> Free and Open Source Software for Geospatial</p> <p>Markdown handles figures are handled by convention adding emphasized text after each image.</p> <pre><code>![FOSS4G](img/foss4g.svg)\n*Free and Open Source Software for Geospatial*\n</code></pre> <p>Note</p> <p>The convention above depends on CSS rules in <code>overrides/assets/stylesheets/extra.css</code> to provide a consistent presentation:</p> <pre><code>img + em, .browser-border + em, .browser-mockup + em {\n  display: block;\n  text-align: left;\n  font-size: 0.7rem;\n  font-style: normal;\n}\n</code></pre> <p>Note</p> <p>The official Material for MkDocs answer for images with captions is to use <code>md_in_html</code> extension:</p> <pre><code>&lt;figure markdown=\"span\"&gt;\n  ![FOSS4G](img/foss4g.svg){ scale=\"25%\" }\n  &lt;figcaption&gt;Free and Open Source Software for Geospatial&lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p>reStructuredText has a <code>figure</code> directive:</p> <pre><code>.. code-block:: raw_markdown\n\n   ![](img/foss4g.svg)\n   *Free and Open Source Software for Geospatial*\n</code></pre>"},{"location":"guide/markdown/#images","title":"Images","text":"<p>Image content:</p> <p></p> <p>Markdown provides inline image syntax.</p> <pre><code>![](img/foss4g.svg)\n</code></pre> <p>Use of mkdocs att_list can be used to adjust scale:</p> <pre><code>![](img/foss4g.svg){ scale=\"25%\" }\n</code></pre> <p>reStructuredText has an <code>image</code> directive:</p> <pre><code>.. image:: img/foss4g.svg\n   :scale: 25%\n</code></pre>"},{"location":"guide/markdown/#tables","title":"Tables","text":"<p>Material for MkDocs :squidfunk<code>data tables &lt;reference/data-tables/&gt;</code> use pipe-tables approach (supported by both mkdocs and pandoc):</p> <p>Leading <code>` |</code> tailing ```:</p> <pre><code>| First Header | Second Header | Third Header |\n|--------------|---------------|--------------|\n| Content Cell | Content Cell  | Content Cell |\n| Content Cell | Content Cell  | Content Cell |\n</code></pre> <p>Column alignment using <code>:</code></p> <pre><code>| First Header | Second Header | Third Header |\n|:-------------|:-------------:|-------------:|\n| Left         |    Center     |        Right |\n| Left         |    Center     |        Right |\n</code></pre>"},{"location":"guide/markdown/#inline-content","title":"Inline content","text":"<p>Use of mkdocs-include-plugin provides ability to inline content. Example project uses following <code>mkdocs.yml</code> setup:</p> <pre><code>plugins:\n  - include-markdown:\n      preserve_includer_indent: true\n      dedent: true\n      comments: false\n</code></pre> <p>The official Material for mkdocs guidance is to use snippets however this did not offer the ability to include code examples and configuration from outside the document tree.</p> <p>Reference</p> <ul> <li>mkdocs-include-markdown-plugin</li> <li>mkdocs-exclude</li> </ul>"},{"location":"guide/markdown/#include-content","title":"include content","text":"<p>Inlining a snippet from another file is helpful for material such as disclaimers or statements which are repeated in text.</p> <p>Empower everyone with open source geospatial</p> <p>Here is a snippet to include markdown files inline, requires opening tag <code>{%</code> and closing tag <code>%}</code>:</p> <pre><code>{/\n  include-markdown 'files/vision_statement.txt'\n/}\n</code></pre> <p>Note</p> <p>Placeholders <code>{/</code>and <code>/}</code>used to indicate location of <code>{%</code>and <code>%}</code>in above code example.</p> <p>Writers can use <code>include-markdown</code> with a glob pattern to inline many files, and an option to adjusting header level. Together these two features can be used break up longer pages into more manageable size.</p> <p>This takes the place of the sphinx-build <code>include</code> directive:</p> <pre><code>.. include:: files/vision_statement.txt\n</code></pre> <p>Note</p> <p>You may wish to use the <code>txt</code> extension for included content. If you wish to use <code>md</code> extension you can adjust <code>mkdocs.yml</code> <code>exclude</code> or not <code>not_in_nav</code> to address warnings.</p> <pre><code>plugins:\n  - exclude:\n      glob:\n        - '**/files/*.md'\n</code></pre>"},{"location":"guide/markdown/#include-config-and-code","title":"include config and code","text":"<p>Including configuration and code examples:</p> <pre><code>&lt;CharacterString&gt;da165110-88fd-11da-a88f-000d939bc5d8&lt;/CharacterString&gt;\n</code></pre> <p>Use <code>include</code>to include normal files, with optional use of start and end markers to capture a snippet, and dedent for appearance.</p> <p>In this case we are including content into an xml code block to provide syntax highlighting, requires opening tag <code>{%</code> and closing tag <code>%}</code> within the code block:</p> <pre><code>``` xml\n{/\n     include 'files/record.xml'\n     dedent=\"true\"\n     start=\"&lt;!--start--&gt;\"\n     end=\"&lt;!--end--&gt;\"\n/}\n```\n</code></pre> <p>Note</p> <p>Placeholders <code>{/</code>and <code>/}</code>used to indicate location of <code>{%</code>and <code>%}</code>in above code example.</p> <p>This takes the place of the sphinx-build <code>literal-include</code> directive:</p> <pre><code>.. literalinclude:: files/record.xml\n   :language: xml\n   :start-after: &lt;!--start--&gt;\n   :end-before: &lt;!--end--&gt;\n   :dedent:\n</code></pre>"},{"location":"guide/style/","title":"Style Guide","text":"<p>Writing style guide to help creating consistent documentation.</p> <p>This style guide is useful as a reference when reviewing pull-requests for documentation.</p> <p>Reference</p> <ul> <li>GeoServer Style Guide</li> <li>GeoNetwork Style Guide</li> </ul>"},{"location":"guide/style/#content-conventions","title":"Content conventions","text":""},{"location":"guide/style/#be-concise","title":"Be concise","text":"<p>Documentation should be concise and not just a brain dump. Reference material should contain short pages and be easy to refer to without having to scroll through a large volume of text. Tutorials can be longer, depending on scope. If the point of the document is to share your thoughts and insights, it belongs in a blog post. This documentation is a manual, not a wiki.</p>"},{"location":"guide/style/#avoid-marketing","title":"Avoid marketing","text":"<p>If the point of the document is to showcase a new feature it does not belong in the documentation. Write an article or a blog post about it. If it is necessary to point out a technical benefit of a feature then do so from a technical standpoint.</p> <p>Bad</p> <p>Sub-Portals are a great way to provide a team with their own catalogue!</p> <p>Good</p> <p>Sub-Portals define a distinct catalogue for use.</p>"},{"location":"guide/style/#be-professional","title":"Be professional","text":"<p>Avoid the use of slang or other \"colorful\" language. The point of a technical document is to be informative, not to keep the reader amused. Avoiding slang helps keep the document accessible to as large an audience as possible.</p> <p>Bad</p> <ol> <li>Next, fire up whatever tool you use to browse the web and point it in the direction of ...</li> </ol> <p>Good</p> <ol> <li>Next, start your web browser and navigate to ...</li> </ol>"},{"location":"guide/style/#use-direct-commands","title":"Use direct commands","text":"<p>When providing step-by-step instructions, number steps and use direct commands or requests. Avoid the use of \"we\" and \"let's\".</p> <p>Bad</p> <p>Now let's select a record by ...</p> <p>Good</p> <ol> <li>Select a record by ...</li> </ol>"},{"location":"guide/style/#naming-conventions","title":"Naming conventions","text":"<p>Reference</p> <ul> <li>Wikipedia naming conventions</li> </ul>"},{"location":"guide/style/#capitalization-of-page-names","title":"Capitalization of page names","text":"<p>Each word in the page name should be capitalized except for articles (such as \"the\", \"a\", \"an\") and conjunctions (such as \"and\", \"but\", \"or\"). A page name should never start with an article.</p> <p>Bad</p> <p>Adding a wms or wfs service</p> <p>Good</p> <p>Adding a WMS or WFS service</p> <p>Bad</p> <p>The Harvester Tutorial</p> <p>Good</p> <p>Harvester Tutorial</p>"},{"location":"guide/style/#capitalization-of-section-names","title":"Capitalization of section names","text":"<p>Do not capitalize second and subsequent words unless the title is almost always capitalized in English (like proper names). Thus, capitalize John Wayne and Art Nouveau, but not Video Games.</p> <p>Bad</p> <p>Creating a New Record</p> <p>Good</p> <p>Creating a new record</p>"},{"location":"guide/style/#verb-usage","title":"Verb usage","text":"<p>It is recommended that the gerund (the -ing form in English) be used unless there is a more common noun form. For example, an article on swimming is better than one on swim.</p> <p>Bad</p> <p>Create a new datastore</p> <p>Good</p> <p>Creating a new datastore</p>"},{"location":"guide/style/#avoid-plurals","title":"Avoid plurals","text":"<p>Create page titles that are in the singular. Exceptions to this are nouns that are always plural (scissors, trousers), a small class that requires a plural (polar coordinates, Bantu languages, The Beatles).</p> <p>Bad</p> <p>templates tutorial</p> <p>Good</p> <p>Template tutorial</p>"},{"location":"guide/style/#formatting","title":"Formatting","text":""},{"location":"guide/style/#code-and-command-line","title":"Code and command line","text":"<p>Any code or command line snippets should be formatted as code:</p> <pre><code>{\n   \"code\": \"This is a code block.\"\n}\n</code></pre> <p>When lines are longer than 80 characters, extend multiple lines in a format appropriate for the language in use. If possible, snippets should be functional when pasted directly into the appropriate target.</p> <p>For example, XML make no distinction between a single space and multiple spaces, so the following snippets are fine:</p> <pre><code>&lt;namespace:tagname attributename=\"attributevalue\" attribute2=\"attributevalue\"\n   nextattribute=\"this is on another line\"/&gt;\n</code></pre> <p>For shell scripts, new lines can be escaped with a backslash character ([]{.title-ref}).</p> <pre><code>mvn clean install \\\n    -DskipTests\n</code></pre> <pre><code>BUILD SUCCESS\n</code></pre> <p>It is helpful to separate out input from output, so that the command can be easily copied as shown above.</p>"},{"location":"guide/download/LICENSE/","title":"The MIT License (MIT)","text":"<p>Copyright \u00a9 2024 Jody Garnett</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"setup/","title":"Getting started","text":""},{"location":"setup/#install","title":"Installation","text":"<p>A translate script is provided to facilitate working with pandoc and deepl translation services.</p> <ol> <li> <p>To install development version use:</p> <pre><code>pip install git+https://github.com/jodygarnett/translate.git\n</code></pre> </li> <li> <p>Install script requirements, and check it runs:</p> <pre><code>mkdocs_translate --help\n</code></pre> </li> <li> <p>This script requires pandoc be installed:</p> <p>Ubuntu:</p> <pre><code>apt-get install pandoc\n</code></pre> <p>macOS:</p> <pre><code>brew install pandoc\n</code></pre> <p>Reference</p> <ul> <li>https://pandoc.org/installing.html</li> </ul> </li> </ol>"},{"location":"setup/#setup","title":"Project setup","text":"<ol> <li> <p>A working example is provided to be adapted for your project.</p> </li> <li> <p>Create requirements.txt with mkdocs plugins required.</p> <pre><code>mkdocs-material&gt;=9.5.9\nmkdocs-include-markdown-plugin&gt;=6.0.4\nmkdocs-exclude&gt;=1.0.2\nmkdocs-macros-plugin&gt;=1.0.4\n</code></pre> </li> <li> <p>Create mkdocs.yml, the navigation tree is initially empty.</p> <pre><code># Project information\nsite_name: MkDocs Translate\nsite_description: Example sphinx-build documentation project for use with mkdocs_translate script.\n\nsite_dir: build/html\nsite_url: http://jodygarnett.github.io/translate\n\n# Repository\nrepo_name: translate\nrepo_url: https://github.com/jodygarnett/translate\nedit_uri: edit/main/example/docs\n\n# Copyright\ncopyright: Copyright &amp;copy; 2024 Open Source Geospatial Foundation\n\nextra_css:\n  - assets/stylesheets/extra.css\n\n# Configuration\ntheme:\n  name: material\n  language: en\n  custom_dir: overrides\n  # logo: assets/images/geoserver_mark.png\n  # favicon: assets/images/geoserver_mark.png\n  icon:\n    repo: fontawesome/brands/github\n  palette:\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: blue\n      toggle:\n        icon: material/weather-night\n        name: Switch to dark mode\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to light mode\n  features:\n    - content.action.view\n    - content.action.edit\n    - content.code.copy\n    - content.tabs.link\n    - navigation.tracking\n    - navigation.prune\n    - navigation.indexes\n    - toc.follow\n    - navigation.top\n    - navigation.footer\n    - announce.dismiss\n\n# Plugins - install using: pip3 install -r requirements.txt\nplugins:\n  - exclude:\n      glob:\n        - '**/download/download.txt'\n  - include-markdown:\n      preserve_includer_indent: true\n      dedent: true\n      comments: false\n  - macros:\n      render_by_default: false\n      on_error_fail: true\n      on_undefined: strict\n      j2_block_start_string: '[[%'\n      j2_block_end_string: '%]]'\n  - search\n\n# Customizations\nhooks:\n  - download.py\nextra:\n  homepage: http://jodygarnett.github.io/translate\n  social:\n    - icon: fontawesome/brands/github\n      link: ttps://github.com/jodygarnett/translate\n  version: '0.9'\n  release: '0.9'\n\n# Extensions\n# - These are carefully chosen to work with pandoc markdown support for whole document translation\nmarkdown_extensions:\n  - admonition\n  - attr_list\n  - def_list\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n      options:\n        custom_icons:\n          - overrides/.icons\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.smartsymbols\n  - pymdownx.superfences:\n  - pymdownx.tabbed:\n      alternate_style: true\n  - tables\n  - md_in_html\n\n# Validation\nvalidation:\n  nav:\n    omitted_files: info\n    not_found: warn\n    absolute_links: info\n  links:\n    not_found: warn\n    absolute_links: info\n    unrecognized_links: info\n\nnot_in_nav: |\n  **/download/*.md\n\n# Page tree\nnav:\n- Home: index.md\n</code></pre> </li> <li> <p>Create <code>build/</code> folder for temporary files during migration.</p> <pre><code>mkdir build\n</code></pre> <p>Note</p> <p>If converting a maven project use of the existing <code>target/</code> folder can be configured below.</p> </li> <li> <p>Define <code>.gitingore</code> to avoid adding generated artifacts to version control.</p> <pre><code>__pycache__\ntarget\nbuild\n!.gitignore\n</code></pre> </li> <li> <p>The resulting directory structure is:</p> <pre><code>docs/\nsource/\n.gitignore\ndownload.py\nmkdocs.yml\nrequirements.txt\n</code></pre> </li> </ol>"},{"location":"setup/#download_hook","title":"Download Hook","text":"<p>Optional: If your content uses <code>download</code>directive to include external content, there is a <code>mkdocs</code>hook for processing of <code>download.txt</code>files.</p> <ol> <li> <p>Create download.py.</p> <pre><code>import glob\nimport logging\nimport mkdocs.plugins\nimport os\nimport shutil\n\nlog = logging.getLogger('mkdocs')\n\n\n@mkdocs.plugins.event_priority(-50)\ndef on_pre_build(config, **kwargs):\n    docs_dir = config['docs_dir']\n    # print(docs_dir)\n\n    pattern = os.path.normpath(os.path.join(docs_dir, '**', 'download', 'download.txt'))\n\n    for download_txt in glob.glob(pattern, recursive=True):\n        download_folder = os.path.dirname(download_txt)\n        donload_txt_path = os.path.relpath(download_txt,docs_dir)\n        log.info(f\"Download {donload_txt_path} ...\")\n        with open(download_txt, 'r') as file:\n            path_list = file.read()\n\n        for path in path_list.splitlines():\n            if len(path.strip()) == 0 or path.startswith('#'):\n                continue\n            resolved = os.path.normpath(os.path.join(download_folder, path))\n            if os.path.exists(resolved):\n                dest = os.path.normpath(os.path.join(download_folder, os.path.basename(path)))\n                if not os.path.exists(dest) or (os.stat(resolved).st_mtime - os.stat(dest).st_mtime &gt; 1):\n                    print(f\"Download {dest}\")\n                    shutil.copyfile(resolved, dest, follow_symlinks=True)\n                else:\n                    log.info(f\"Download '{resolved}' up to date\")\n            else:\n                log.warning(f\"Download '{resolved}' not found\")\n</code></pre> </li> <li> <p>Register hook with <code>mkdocs.yml</code></p> <pre><code># Customizations\nhooks:\n- download.py\n</code></pre> <p>Note</p> <p>See writing guide Download of external file for example on how to use this hook.</p> </li> <li> <p>The resulting directory structure is:</p> <pre><code>docs/\nsource/\ndownload.py\nmkdocs.yml\nrequirements.txt\n</code></pre> </li> </ol>"},{"location":"setup/#config","title":"Configuration","text":"<p>For simple python sphinx-build setup and directory structure no configuration is required.</p> <p>Optional: To provide configuration for your project:</p> <ol> <li> <p>Create a translate.yml to configure script for your project.</p> <pre><code># translate script configuration python project\nproject_folder: \".\"\ndocs_folder: \"docs\"\nbuild_folder: \"build\"\n\n# mkdocs migration\nrst_folder: \"source\"\nanchor_file: 'anchors.txt'\nconvert_folder: \"migrate\"\nsubstitutions:\n  project: MkDocs Translation Example\n  author: Open Source Geospatial Foundation\n  copyright: 2024, Open Source Geospatial Foundation\n  project_copyright: 2024, Open Source Geospatial Foundation\nextlinks:\n  github: https://github.com/jodygarnett/translate/blob/main/%s\n  release: https://github.com/jodygarnett/translate/releases/tag/{{ release }}|Release {{ release }}\n  squidfunk: https://squidfunk.github.io/mkdocs-material/%s\nmacro_ignore:\n  - setup/index.md\nnav:\n  index.md: Home\n  'translate/index.md': Translate\n  'translate/migrate.md': Migrate\n  guide/index.md: Guide\n\n# markdown internationalization\ndeepl_base_url: \"https://api-free.deepl.com\"\nupload_folder: \"upload\"\ndownload_folder: \"download\"\n</code></pre> <p>Note</p> <p>The example above is for the example project, with <code>project</code> and <code>author</code> substitutions. This project also has <code>extlinks</code> defined that need to be known upfront during migration.</p> </li> <li> <p>Optional: Maven project translate.yml configuration recommendations.</p> <pre><code># translate script configuration maven project\nproject_folder: \".\"\ndocs_folder: \"docs\"\nbuild_folder: \"target\"\n\n# mkdocs migration\nrst_folder: \"source\"\nanchor_file: 'anchors.txt'\nconvert_folder: \"migrate\"\n\n# markdown internationalization\ndeepl_base_url: \"https://api-free.deepl.com\"\nupload_folder: \"translate\"\ndownload_folder: \"translate\"\n</code></pre> </li> <li> <p>The resulting directory structure is:</p> <pre><code>docs/\nsource/\n.gitignore\ntranslate.yml\nmkdocs.yml\nrequirements.txt\n</code></pre> </li> </ol> <p>The configuration settings are:</p> <code>project_folder</code>: <code>.</code> <p>Default assumes you are running from the current directory.</p> <code>docs_folder</code> <code>docs</code> <p>mkdocs convention.</p> <code>build_folder</code> <code>build</code> <p>The use of <code>build</code> follows sphinx-build and mkdocs convention, maven projects may wish to use <code>target</code>.</p> <code>rst_folder</code> <code>source</code> <p>Location of sphinx-build documentation to migrate to mkdocs.</p> <code>anchor_file</code> <code>anchors.txt</code> <p>Name of index file used to lookup anchor and title information during migration.</p> <code>convert_folder</code> <code>migrate</code> <p>Combined with <code>build_folder</code> for rst conversion temporary files (example: <code>build/migrate</code>. Temporary files are required for use by pandoc.</p> <code>upload_folder</code> <code>upload</code> <p>Combined with <code>build_folder</code> to stage html files for internationalization (example: <code>build/upload</code>)</p> <code>deepl_base_url</code>: <code>https://api-free.deepl.com</code> <p>Customize if you have a subscription to deepl.</p> <code>download_folder</code> <code>download</code> <p>Combined with <code>build_folder</code> to retrieve internationalization results (example: <code>build/download</code>) Temporary files are required for use by pandoc.</p> <code>substitutions</code> <p>dictionary of <code>|substitutions|</code>to use when converting config.py rst_epilog common substitutions.</p> <pre><code>project: GeoServer\nauthor: Open Source Geospatial Foundation\ncopyright: 2023, Open Source Geospatial Foundation\nproject_copyright: 2023, Open Source Geospatial Foundation\n</code></pre> <p>The built-in substitutions for <code>{{ version }}</code>and <code>{{ release }}</code>are changed to <code>{{ version }}</code> and <code>{{ release }}</code> variables for use with <code>mkdocs-macros-plugin</code>variable substitution:</p> <p>Use <code>mkdocs.yml</code> to define these variable substitutions:</p> <pre><code>extra:\n  homepage: https://geoserver.org/\n  version: '2.24'\n  release: '2.24.2'\n</code></pre> <code>extlinks</code> <p>dictionary of config.py extlinks substitutions taking the form:</p> <pre><code>extlinks:\n  wiki: https://github.com/geoserver/geoserver/wiki/%s\n  user: https://docs.geoserver.org/{{ branch }}/en/user/%s\n  geos: https://osgeo-org.atlassian.net/browse/GEOS-%s|GEOS-%s\n  download_release: https://sourceforge.net/projects/geoserver/files/GeoServer/{{ release }}/geoserver-{{ release }}-%s.zip|geoserver-{{ release }}-%s.zip\n</code></pre> <p>Note</p> <p>Use of <code>mkdocs-macros-plugin</code>for variable substitution of <code>release</code>above.</p> <p>Use of <code>|GEOS-%s</code> to override default link text <code>%s</code>.</p> <p>This handles the sphinx-build <code>config.py</code> extlinks during migration:</p> <pre><code>extlinks = {\n   'wiki': ('https://github.com/geoserver/geoserver/wiki/%s', '%s'),\n   'user': ('https://docs.geoserver.org/'+branch+'/en/user/%s', '%s'),\n   'geos': ('https://osgeo-org.atlassian.net/browse/GEOS-%s','GEOS-%s'),\n   'download_release': ('https://sourceforge.net/projects/geoserver/files/GeoServer/' + release + '/geoserver-' + release + '-%s.zip', 'geoserver-' + release + '-%s.zip )\n}\n</code></pre> <code>macro_ignore</code> <p>Use of <code>mkdocs-macros-plugin</code>can conflict with code examples.</p> <p>This script adds the YAML header to enable macros to better support the use <code>{{ version }}</code>and <code>{{ release }}</code> If you find this accidentially is triggered by code examples you can add an ignore.</p> <code>nav</code> <p>Provide simplified title for navigation, incase <code>toctree</code> title is too long. Most often used to override top-level <code>index.rst</code> title as \"Home\".</p>"},{"location":"translate/","title":"Translate Script","text":"<p>The translate script is used for migrating contents to mkdocs, and translating mkdocs content between languages.</p> <ul> <li>Migrate to MkDocs</li> <li>Language</li> </ul>"},{"location":"translate/language/","title":"Language Internationalization","text":"<p>To help manage a multi-language build is it kind to provide human translators with an example document to start from.</p>"},{"location":"translate/language/#setup","title":"Setup","text":"<p>The <code>mkdocs-static-i18n &lt;https://ultrabug.github.io/mkdocs-static-i18n/&gt;</code>plugin is setup based on suffix, with <code>index.md</code> is the default English, and <code>index.fr.md</code> used for French:</p> <pre><code>| index.md\n| index.fr.md\n+ img/\n  | figure.png\n  + figure.fr.png\n</code></pre> <p>The configuration of <code>mkdocs-static-i18n</code> is represented in <code>mkdocs.yml</code> using:</p> <pre><code>plugins:\n  - i18n:\n      docs_structure: suffix\n      reconfigure_material: true\n      languages:\n        - locale: en\n          default: true\n          name: English\n        - locale: fr\n          name: Fran\u00e7ais\n          site_name: 'Aide en ligne'\n          nav_translations:\n            Home: Accueil\n            Search: Recherche\n</code></pre>"},{"location":"translate/language/#translate","title":"Language Translation","text":"<p>Translation uses pandoc to convert to <code>html</code> and then using Deepl REST API.</p> <ol> <li> <p>Provide environmental variable with Deepl authentication key:</p> <pre><code>export DEEPL_AUTH=\"xxxxxxxx-xxx-...-xxxxx:fx\"\n</code></pre> </li> <li> <p>Translate a document to french using pandoc and deepl:</p> <pre><code>mkdocs_translate french docs/help/index.md\n</code></pre> </li> <li> <p>To translate several documents in a folder:</p> <pre><code>mkdocs_translate french docs/overview/*.md\n</code></pre> </li> <li> <p>See <code>mkdocs_translate french --help</code> for more options.</p> </li> </ol>"},{"location":"translate/language/#limitations","title":"Limitations","text":"<p>Keep in mind the following limitations:</p> <ul> <li>Deepl charges by the character so bulk translation not advisable.</li> <li>You are welcome to use google translate, ChatGPT, or Deepl directly - keeping in mind markdown formatting may be lost.</li> <li>Please see the writing guide for what mkdocs functionality is supported.</li> </ul> <p>Specific pandoc extensions are used to match the capabilities of mkdocs:</p> markdown extension pandoc extension tables pymdownx.keys pipe_tables pymdownx.superfences backtick_code_blocks admonition fenced_divs <p>The differences differences in markdown requires pre/post processing of markdown and html files. These steps are automated in the mkddoc_translate, supporting additionalmkdocs features requires updating this script.</p>"},{"location":"translate/migrate/","title":"Migrate from sphinx-build to mkdocs","text":""},{"location":"translate/migrate/#preflight","title":"Preflight","text":"<ol> <li> <p>Use init to create <code>docs</code> directory and copy over non <code>rst</code> files (such as images and sample data).</p> <pre><code>mkdocs_translate init\n</code></pre> </li> <li> <p>To effectively migrate content the sphinx-build rst docs are scanned to collect information about the anchors, headings and downloads.</p> <pre><code>mkdocs_translate scan\n</code></pre> </li> <li> <p>The following is produced during preflight scans:</p> <pre><code>build/migrate/anchors.txt\ndocs/download/download.txt\ndocs/guide/download/download.txt\ndocs/setup/download/download.txt\n</code></pre> </li> </ol> <p>Troubleshooting:</p> <ul> <li> <p>You can run these scans independently:</p> <pre><code>mkdocs_translate scan --scan=download\nmkdocs_translate scan --scan=index\n</code></pre> </li> <li> <p>To troubleshoot an individual file, the resulting <code>index</code>can be sent to standard out:</p> <pre><code>mkdocs_translate scan source/setup/index.rst\nmkdocs_translate scan --scan=download source/setup/index.rst\nmkdocs_translate scan --scan=index source/setup/index.rst\n</code></pre> </li> </ul>"},{"location":"translate/migrate/#navigation","title":"Navigation","text":"<ol> <li> <p>To generate out navigation tree:</p> <pre><code>mkdocs_translate scan toc\n</code></pre> </li> </ol> <p>2. The output is printed to standard out and may be appended to <code>mkdocs.yml</code> file.</p> <pre><code>{% \n  include \"../../mkdocs.yml\"\n   start=\"# Page tree\"\n%}\n</code></pre>"},{"location":"translate/migrate/#migrate","title":"Content Migration","text":"<p>Format conversion from sphinx-build reStructuredText files to mkdocs Markdown content.</p> <ol> <li> <p>To bulk convert all content from <code>rst</code> to <code>md</code>:</p> <pre><code>mkdocs_translate migrate\n</code></pre> </li> <li> <p>Review this content you may find individual files to fix.</p> <p>Some formatting is easier to fix in the <code>rst</code> files before conversion:</p> <ul> <li>Indention of nested lists in <code>rst</code> content is often incorrect, resulting in restarted numbering or block quotes.</li> <li>Random <code>{.title-ref}</code> snippets is a general indication to simplify the rst and re-translate.</li> <li>Anchors or headings with trailing whitespace throwing off the heading scan, resulting in broken references</li> </ul> </li> </ol> <p>Troubleshooting:</p> <ul> <li> <p>Convert a single file:</p> <pre><code>mkdocs_translate migrate source/introduction/license.rst\n</code></pre> </li> <li> <p>Bulk convert files in a folder:</p> <pre><code>mkdocs_translate migrate source/introduction/**/*.rst\n</code></pre> </li> </ul>"},{"location":"translate/migrate/#known-limitations","title":"Known limitations","text":"<p>Some things are not supported by pandoc, which will produce <code>WARNING:</code> messages:</p> <ul> <li> <p>Substitutions used for inline images</p> </li> <li> <p>Underlines: replace with bold or italic</p> <pre><code>WARNING: broken reference 'getting_involved' link:getting_involved-broken.rst\n</code></pre> </li> </ul>"}]}